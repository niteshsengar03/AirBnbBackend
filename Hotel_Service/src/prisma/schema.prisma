// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model hotels{
  id Int @id @default(autoincrement())
  name String
  address String
  location String
  rating Decimal ?
  rating_count Int ? 
  roomCategory room_categories[]
  room rooms[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime? 
}

model rooms{
  id Int @id @default(autoincrement())
  room_category_id Int
  room_category room_categories @relation(fields:[room_category_id], references: [id] , onDelete: Cascade, onUpdate: Cascade)
  hotel_id Int
  price Int @default(0)
  hotel hotels @relation(fields: [hotel_id],references: [id],onDelete: Cascade,onUpdate: Cascade)
  date_of_availability DateTime
  booking_id Int?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime? 
}

model room_categories{
  id Int @id @default(autoincrement())
  room_type roomtype
  price Int
  hotel_id Int
  hotel hotels @relation(fields: [hotel_id], references: [id],onDelete: Cascade,onUpdate: Cascade)
  room_count Int
  room rooms[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime?
}

enum roomtype{
  SINGLE
  DOUBLE
  FAMILY
  DELUX
  SUITE  
}